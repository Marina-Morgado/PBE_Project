require 'gtk3'
require_relative "/home/pi/Desktop/pbe/puzzle1.rb" #loading puzzle_1 into puzzle_2



def clear
@dis.clear()
end

def window
	
	window = Gtk::Window.new("TextView")
	window.set_window_position Gtk::WindowPosition::CENTER
	window.set_size_request(300, 200)
	window.set_border_width(10)
	
	box = Gtk::Box.new(:vertical, 0)

	
	textview = Gtk::TextView.new
	textview.editable =  true
	textview.left_margin = 8
	textview.right_margin = 8
	textview.buffer.text = ""
	textview.set_size_request 50, 75 
	textview.cursor_visible =  true
	textview.pixels_above_lines = 10
	textview.pixels_below_lines = 10
	

	#creating two differents buttons, one for displaying into LCD and another for exiting
	button = Gtk::Button.new :label => 'Display'
	clear_button = Gtk::Button.new :label => 'Clear'
	exiting_button = Gtk::Button.new(:label => "Exit")
	
	
	css_provider = Gtk::CssProvider.new
	css_provider.load(data: "button:hover {background-color: honeydew;}\
                         button:active {background-color: lightcoral;}")
	button.style_context.add_provider(css_provider, Gtk::StyleProvider::PRIORITY_USER)
	clear_button.style_context.add_provider(css_provider, Gtk::StyleProvider::PRIORITY_USER)
	exiting_button.style_context.add_provider(css_provider, Gtk::StyleProvider::PRIORITY_USER)
	
	
	button.signal_connect "clicked" do
		lect_teclat(textview.buffer.text)
	end
	exiting_button.signal_connect "clicked" do
     Gtk.main_quit
	end
	clear_button.signal_connect "clicked" do
     clear
	end
	
	box.add(textview)
	box.add(button)
	box.add(clear_button)
	box.add(exiting_button)
	
	window.add(box)
	window.signal_connect('delete_event') {  |_widget| Gtk.main_quit }
	window.show_all
 
end
 
window
Gtk.main
